name: Test

on: [push, pull_request]

env:
  NODE_VERSION: 18
  # PYTHON_VERSIONS: [3.7, 3.8, 3.9, 3.10, 3.11]

jobs:
  spelling:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: "true"

    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dev tools
      run: yarn

    - name: Check spelling
      run: yarn cspell

  typescript:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16, 18, 19, 20]

    defaults:
      run:
        working-directory: typescript

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install project
      run: yarn

    - name: Run static checks
      run: yarn fullCheck

  python:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", 3.11]

    defaults:
      run:
        working-directory: python

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install building tools
      run: pip3 install -r scripts/requirements.txt

    - name: Determine version
      run: |
        export BRANCH=${GITHUB_REF##*/}
        echo "Branch $BRANCH"
        export VERSION=$(bash ./scripts/calculate_version.sh)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Version $VERSION"
        ( test $BRANCH = "stable" && export PRERELEASE=false ) || export PRERELEASE=true
        echo "PRERELEASE=$PRERELEASE" >> $GITHUB_ENV

    - name: Build pip package
      env:
          PYTHONPATH: ./
          VERSION: ${{ env.VERSION }}
      run: ./scripts/build_package.sh

    - name: Install the package
      run: pip3 install -e .

    - name: Install tools
      run: pip3 install -r test/requirements.txt

    - name: Run static checks
      run: scripts/full_check.sh
